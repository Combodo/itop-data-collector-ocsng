<?xml version="1.0" encoding="UTF-8"?><!-- Default values for parameters. Do NOT alter this file, copy its content to conf/params.local.xml and edit it instead -->
<parameters>
    <!--*****************************************************************-->
	<!--************************ Global params *******************************-->
	<!--*****************************************************************-->
	<!-- OCS Database -->
	  <sql_host>localhost</sql_host>
	<sql_database>ocsweb;charset=UTF8</sql_database>
	<sql_login>root</sql_login>
	<sql_password>root</sql_password>

	<!-- iTop Application -->
    <!-- default values -->
	  <default_org_id>Demo</default_org_id>
    <default_status>production</default_status>
    <default_active_status>active</default_active_status>
    <!--Filter type for synchronization ( categories or default filters ) -->
    <use_asset_categories>no</use_asset_categories>
    <use_software_categories>no</use_software_categories>
    <!-- Class to collect -->
    <CategoryCollection>yes</CategoryCollection>
    <PCCollection>yes</PCCollection>
    <ServerCollection>yes</ServerCollection>
    <VMCollection>yes</VMCollection>
    <MobilePhoneCollection>yes</MobilePhoneCollection>
    <PrinterCollection>yes</PrinterCollection>
    <SoftwareCollection>yes</SoftwareCollection>
    <LicenceCollection>no</LicenceCollection>

	<!-- TeemIp options -->
	  <collect_ips>yes</collect_ips>
    <default_ip_status>allocated</default_ip_status>
    <manage_ipv6>no</manage_ipv6>
    <default_view_name></default_view_name>

	<!-- Data synchro parameters -->
	<json_placeholders type="hash">
        <prefix>OCSng</prefix>
        <suffix></suffix>
        <full_load_interval>604800</full_load_interval><!-- 7 days (in seconds): 7*24*60*60 -->
        <synchro_status>production</synchro_status>
        <delete_policy>update</delete_policy>l
        <delete_policy_update>status:obsolete</delete_policy_update>
        <delete_policy_retention>0</delete_policy_retention>
    </json_placeholders>

    <!--*****************************************************************-->
    <!--************************ Categories *******************************-->
    <!--*****************************************************************-->

    <!-- AssetCategory -->
    <OCSAssetCategoryCollector_query>
        SELECT category_name as primary_key,
                       category_name as name,
                       category_desc as description
        FROM assets_categories;
    </OCSAssetCategoryCollector_query>

    <!-- SoftwareCategory -->
    <OCSSoftwareCategoryCollector_query>
        SELECT category_name as primary_key,
                       category_name as name
        FROM software_categories;
    </OCSSoftwareCategoryCollector_query>

	<!--*****************************************************************-->
	<!--************************ Asset *******************************-->
	<!--*****************************************************************-->

	<!-- Brand -->
	<OCSBrandCollector_query>
        SELECT DISTINCT SMANUFACTURER as primary_key,
        SMANUFACTURER as name
        FROM bios
    </OCSBrandCollector_query>

	<!-- OSFamily -->
	<OCSOSFamilyCollector_query>
        SELECT DISTINCT OSNAME as primary_key,
        OSNAME as name
        FROM hardware
    </OCSOSFamilyCollector_query>

	<!-- OSVersion -->
	<OCSOSVersionCollector_query>
        SELECT DISTINCT CONCAT(OSNAME,OSVERSION) as primary_key,
        OSNAME as osfamily_id,
        OSVERSION as name
        FROM hardware
    </OCSOSVersionCollector_query>

	<!-- OSLicence - windows only-->
	<OCSOSLicenceCollector_query>
        SELECT DISTINCT CONCAT(OSNAME,OSVERSION,h.WINPRODID) as primary_key,
        CONCAT(OSNAME,'_',OSVERSION) as osversion_id,
        h.WINPRODID  as name,
        h.WINPRODKEY as licence_key,
        h.OSCOMMENTS as description,
        '$default_org_id$' as org_id
        FROM hardware h
        WHERE WINPRODID is not null
    </OCSOSLicenceCollector_query>

	<!--********************  Model for Servers ********************-->

	<!-- Model for Servers -->
	<OCSServerModelCollector_query>
        SELECT DISTINCT CONCAT(SMANUFACTURER,SMODEL) AS primary_key,
        SMANUFACTURER as brand_id,
        SMODEL as name,
        'Server' As type
        FROM bios
        WHERE TYPE COLLATE utf8_general_ci NOT IN ('Notebook','Laptop','Mobile')
        AND SMANUFACTURER COLLATE utf8_general_ci NOT LIKE 'VMware%'
    </OCSServerModelCollector_query>

	<!-- Model for Servers - with  use_asset_categories-->
    <OCSServerModelCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='Server'
    </OCSServerModelCollector_getCategoriesFromItop>

    <OCSServerModelCollector_with_categories_query>
        SELECT DISTINCT CONCAT(SMANUFACTURER,SMODEL) AS primary_key,
        SMANUFACTURER as brand_id,
        SMODEL as name,
        'Server' As type
        FROM bios AS b
        JOIN hardware AS h ON h.id = b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSServerModelCollector_with_categories_query>

    <!--*********************** Server *****************************-->

    <!-- Server  -->
    <OCSServerCollector_query>
        SELECT b.SSN as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as osfamily_id,
        h.OSVERSION as osversion_id,
        h.PROCESSORT as cpu,
        h.MEMORY as ram,
        h.IPADDR as managementip,
        h.IPADDR as managementip_id,
        b.SMANUFACTURER as brand_id,
        b.SMODEL as model_id,
        b.SSN as serialnumber,
        h.WINPRODID as oslicence_id,
        h.OSCOMMENTS as ocs_oscomment,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM hardware AS h
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE b.TYPE COLLATE utf8_general_ci NOT IN ('Notebook','Laptop','Mobile')
        AND b.SMANUFACTURER COLLATE utf8_general_ci NOT LIKE 'VMware%'
    </OCSServerCollector_query>

    <!-- Server  -->
    <OCSServerCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='Server'
    </OCSServerCollector_getCategoriesFromItop>

    <OCSServerCollector_with_categories_query>
        SELECT b.SSN as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as osfamily_id,
        h.OSVERSION as osversion_id,
        h.PROCESSORT as cpu,
        h.MEMORY as ram,
        h.IPADDR as managementip,
        h.IPADDR as managementip_id,
        b.SMANUFACTURER as brand_id,
        b.SMODEL as model_id,
        b.SSN as serialnumber,
        h.WINPRODID as oslicence_id,
        h.OSCOMMENTS as ocs_oscomment,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM hardware AS h
        JOIN bios AS b ON h.id=b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSServerCollector_with_categories_query>

    <!--******************** Physical Interface for server **********************-->

    <!-- PhysicalInterface for Server  -->
    <OCSServerPhysicalInterfaceCollector_query>
        SELECT n.ID as primary_key,
        n.DESCRIPTION as name,
        IF(n.SPEED REGEXP '^[0-9]+ ', LEFT(n.SPEED, LOCATE(' ', n.SPEED)), n.SPEED) as speed,
        n.MACADDR as macaddress,
        n.IPADDRESS as ipaddress,
        n.IPMASK as ipmask,
        n.IPGATEWAY as ipgateway,
        h.NAME as connectableci_id
        FROM (select min(id) id, MACADDR FROM networks where MACADDR != '00:00:00:00:00:00' group by MACADDR) AS n_filter
        JOIN networks AS n ON n_filter.id=n.id
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE b.SMANUFACTURER COLLATE utf8_general_ci NOT LIKE 'VMware%'
        AND b.TYPE COLLATE utf8_general_ci NOT IN ('Notebook','Laptop','Mobile')
    </OCSServerPhysicalInterfaceCollector_query>

    <!-- PhysicalInterface for Server  -->
    <OCSServerPhysicalInterfaceCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='Server'
    </OCSServerPhysicalInterfaceCollector_getCategoriesFromItop>

    <OCSServerPhysicalInterfaceCollector_with_categories_query>
        SELECT n.ID as primary_key,
        n.DESCRIPTION as name,
        IF(n.SPEED REGEXP '^[0-9]+ ', LEFT(n.SPEED, LOCATE(' ', n.SPEED)), n.SPEED) as speed,
        n.MACADDR as macaddress,
        n.IPADDRESS as ipaddress,
        n.IPMASK as ipmask,
        n.IPGATEWAY as ipgateway,
        h.NAME as connectableci_id
        FROM  (select min(id) id, MACADDR FROM networks where MACADDR != '00:00:00:00:00:00' group by MACADDR) AS n_filter
        JOIN networks AS n ON n_filter.id=n.id
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSServerPhysicalInterfaceCollector_with_categories_query>

    <!--******************** Model for PC *************************-->

	<!-- Model for PC -->
	<OCSPCModelCollector_query>
        SELECT DISTINCT CONCAT(SMANUFACTURER,SMODEL) AS primary_key,
        SMANUFACTURER as brand_id,
        SMODEL as name,
        'PC' As type
        FROM bios
        WHERE TYPE COLLATE utf8_general_ci IN ('Notebook','Laptop')
        AND SMANUFACTURER NOT LIKE 'VMware%'
    </OCSPCModelCollector_query>

	<!-- Model for PC - with  use_asset_categories -->
    <OCSPCModelCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='PC'
    </OCSPCModelCollector_getCategoriesFromItop>

    <OCSPCModelCollector_with_categories_query>
        SELECT DISTINCT CONCAT(SMANUFACTURER,SMODEL) AS primary_key,
        SMANUFACTURER as brand_id,
        SMODEL as name,
        'PC' As type
        FROM bios AS b
        JOIN hardware AS h ON h.id=b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSPCModelCollector_with_categories_query>

	<!--************************ PC *******************************-->
	<!-- PC -->
	<OCSPCCollector_query>
        SELECT b.SSN as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as osfamily_id,
        h.OSVERSION as osversion_id,
        h.PROCESSORT as cpu,
        h.MEMORY as ram,
        b.SMANUFACTURER as brand_id,
        b.SMODEL as model_id,
        b.SSN as serialnumber,
        h.WINPRODID as oslicence_id,
        h.OSCOMMENTS as ocs_oscomment,
        h.IPADDR as ipaddress_id,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM hardware AS h
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE b.TYPE COLLATE utf8_general_ci IN ('Notebook','Laptop')
        AND b.SMANUFACTURER COLLATE utf8_general_ci NOT LIKE 'VMware%'
    </OCSPCCollector_query>

	<!-- PC - with categories -->
    <OCSPCCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='PC'
    </OCSPCCollector_getCategoriesFromItop>

    <OCSPCCollector_with_categories_query>
        SELECT b.SSN as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as osfamily_id,
        h.OSVERSION as osversion_id,
        h.PROCESSORT as cpu,
        h.MEMORY as ram,
        b.SMANUFACTURER as brand_id,
        b.SMODEL as model_id,
        b.SSN as serialnumber,
        h.WINPRODID as oslicence_id,
        h.OSCOMMENTS as ocs_oscomment,
        h.IPADDR as ipaddress_id,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM hardware AS h
        JOIN bios AS b ON h.id=b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSPCCollector_with_categories_query>

    <!--****************** Physical Interface for PC ************************-->
    <!-- PhysicalInterface for PC -->
    <OCSPCPhysicalInterfaceCollector_query>
        SELECT n.ID as primary_key,
        n.DESCRIPTION as name,
        IF(n.SPEED REGEXP '^[0-9]+ ', LEFT(n.SPEED, LOCATE(' ', n.SPEED)), n.SPEED) as speed,
        n.MACADDR as macaddress,
        n.IPADDRESS as ipaddress,
        n.IPMASK as ipmask,
        n.IPGATEWAY as ipgateway,
        h.NAME as connectableci_id
        FROM (select min(id) id, MACADDR FROM networks where MACADDR != '00:00:00:00:00:00' group by MACADDR) AS n_filter
        JOIN networks AS n ON n_filter.id=n.id
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE b.SMANUFACTURER COLLATE utf8_general_ci NOT LIKE 'VMware%'
        AND b.TYPE COLLATE utf8_general_ci IN ('Notebook','Laptop')
    </OCSPCPhysicalInterfaceCollector_query>

    <!-- PhysicalInterface for PC with categories -->
    <OCSPCPhysicalInterfaceCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='PC'
    </OCSPCPhysicalInterfaceCollector_getCategoriesFromItop>

    <OCSPCPhysicalInterfaceCollector_with_categories_query>
        SELECT n.ID as primary_key,
        n.DESCRIPTION as name,
        IF(n.SPEED REGEXP '^[0-9]+ ', LEFT(n.SPEED, LOCATE(' ', n.SPEED)), n.SPEED) as speed,
        n.MACADDR as macaddress,
        n.IPADDRESS as ipaddress,
        n.IPMASK as ipmask,
        n.IPGATEWAY as ipgateway,
        h.NAME as connectableci_id
        FROM (select min(id) id, MACADDR FROM networks where MACADDR != '00:00:00:00:00:00' group by MACADDR) AS n_filter
        JOIN networks AS n ON n_filter.id=n.id
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSPCPhysicalInterfaceCollector_with_categories_query>

	<!--********************* MobilePhone **************************-->
	<!-- MobilePhone  -->
	<OCSMobilePhoneCollector_query>
        SELECT h.ID as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as ocs_osfamily_id,
        h.OSVERSION as ocs_osversion_id,
        b.SMANUFACTURER as brand_id,
        b.SMODEL as model_id,
        b.SSN as serialnumber,
        h.OSCOMMENTS as ocs_oscomment,
        '$default_status$' as status,
        '$default_org_id$' as org_id,
        s.phonenumber as phonenumber
        FROM hardware AS h
        JOIN bios AS b ON b.hardware_id = h.id
        JOIN sim AS s ON s.hardware_id = h.id
        WHERE b.TYPE COLLATE utf8_general_ci LIKE 'Mobile'
    </OCSMobilePhoneCollector_query>

	<!-- MobilePhone - with categories -->
    <OCSMobilePhoneCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='MobilePhone'
    </OCSMobilePhoneCollector_getCategoriesFromItop>

	<OCSMobilePhoneCollector_with_categories_query>
        SELECT h.ID as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as ocs_osfamily_id,
        h.OSVERSION as ocs_osversion_id,
        b.SMANUFACTURER as brand_id,
        b.SMODEL as model_id,
        b.SSN as serialnumber,
        h.OSCOMMENTS as ocs_oscomment,
        '$default_status$' as status,
        '$default_org_id$' as org_id,
        s.phonenumber as phonenumber
        FROM hardware AS h
        JOIN bios AS b ON b.hardware_id = h.id
        JOIN sim AS s ON s.hardware_id = h.id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSMobilePhoneCollector_with_categories_query>

	<!--******************* VirtualMachine *************************-->
	<!-- VirtualMachine -->
	<OCSVirtualMachineCollector_query>
        SELECT h.ID as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as osfamily_id,
        h.OSVERSION as osversion_id,
        h.PROCESSORT as cpu,
        h.MEMORY as ram,
        h.IPADDR as managementip,
        h.IPADDR as managementip_id,
        h.WINPRODID as oslicence_id,
        h.OSCOMMENTS as ocs_oscomment,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM hardware AS h
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE b.SMANUFACTURER COLLATE utf8_general_ci LIKE 'VMware%'
    </OCSVirtualMachineCollector_query>

	<!-- VirtualMachine -->
    <OCSVirtualMachineCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='VirtualMachine'
    </OCSVirtualMachineCollector_getCategoriesFromItop>

	<OCSVirtualMachineCollector_with_categories_query>
        SELECT h.ID as primary_key,
        h.ID as ocs_id,
        h.NAME as name,
        h.OSNAME as osfamily_id,
        h.OSVERSION as osversion_id,
        h.PROCESSORT as cpu,
        h.MEMORY as ram,
        h.IPADDR as managementip,
        h.IPADDR as managementip_id,
        h.WINPRODID as oslicence_id,
        h.OSCOMMENTS as ocs_oscomment,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM hardware AS h
        JOIN bios AS b ON h.id=b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSVirtualMachineCollector_with_categories_query>

	<!--******************* Logical Interface for Virtual Machine *************************-->
	<!-- LogicalInterface for VirtualMachine -->
	<OCSLogicalInterfaceCollector_query>
        SELECT n.ID as primary_key,
        n.DESCRIPTION as name,
        IF(n.SPEED REGEXP '^[0-9]+ ', LEFT(n.SPEED, LOCATE(' ', n.SPEED)), n.SPEED) as speed,
        n.MACADDR as macaddress,
        n.IPADDRESS as ipaddress,
        n.IPMASK as ipmask,
        n.IPGATEWAY as ipgateway,
        h.NAME as virtualmachine_id
        FROM networks AS n
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE b.SMANUFACTURER COLLATE utf8_general_ci LIKE 'VMware%'
    </OCSLogicalInterfaceCollector_query>

	<!-- LogicalInterface for VirtualMachine -->
    <OCSLogicalInterfaceCollector_getCategoriesFromItop>
        SELECT  OCSAssetCategory
        WHERE target_class='VirtualMachine'
    </OCSLogicalInterfaceCollector_getCategoriesFromItop>

	<OCSLogicalInterfaceCollector_with_categories_query>
        SELECT n.ID as primary_key,
        n.DESCRIPTION as name,
        IF(n.SPEED REGEXP '^[0-9]+ ', LEFT(n.SPEED, LOCATE(' ', n.SPEED)), n.SPEED) as speed,
        n.MACADDR as macaddress,
        n.IPADDRESS as ipaddress,
        n.IPMASK as ipmask,
        n.IPGATEWAY as ipgateway,
        h.NAME as virtualmachine_id
        FROM networks AS n
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        JOIN assets_categories ac ON ac.id = h.category_id
        WHERE ac.category_name in ('$categorielist$')
    </OCSLogicalInterfaceCollector_with_categories_query>

	<!--************************ IP *******************************-->
	<!-- IPv4Address - TeemIp installed -->
	<OCSIPv4AddressCollector_query>
        SELECT min(n.ID) as primary_key,
        '$default_org_id$' as org_id,
        n.IPADDRESS as ip,
        '$default_ip_status$' as status,
         IF(h.DNS REGEXP '[\.[0-9]]*', '', h.DNS) as short_name,
        '$default_view_name$' as view_id
        FROM networks AS n
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE IF(n.IPADDRESS REGEXP '^[:]', false, true)
        AND n.IPADDRESS!=''
        group by org_id,  ip,  status,  short_name,  view_id
    </OCSIPv4AddressCollector_query>

	<!-- IPv6Address - TeemIp installed -->
	<OCSIPv6AddressCollector_query>
        SELECT min(n.ID) as primary_key,
        '$default_org_id$' as org_id,
        n.IPADDRESS as ip,
        '$default_ip_status$' as status,
        IF(h.DNS REGEXP '[\.[0-9]]*', '', h.DNS) as short_name,
        '$default_view_name$' as view_id
        FROM networks AS n
        JOIN hardware AS h ON n.hardware_id=h.id
        JOIN bios AS b ON h.id=b.hardware_id
        WHERE IF(n.IPADDRESS REGEXP '^[:]', true, false)
        AND n.IPADDRESS!=''
        group by org_id,  ip,  status,  short_name,  view_id
    </OCSIPv6AddressCollector_query>

	<!-- lnkIPInterfaceToIPAddress - TeemIp installed -->
	<OCSlnkIPInterfaceToIPAddressCollector_query>
        SELECT min(n.ID) as primary_key,
        n.MACADDR as ipinterface_id,
        n.IPADDRESS as ipaddress_id
        FROM networks AS n
        WHERE n.IPADDRESS != ''
        GROUP BY  ipinterface_id, ipaddress_id
    </OCSlnkIPInterfaceToIPAddressCollector_query>

	<!--*********************** Printer ****************************-->
	<OCSPrinterCollector_with_listprinters_query>
        SELECT lp.ID as primary_key,
        lp.NAME as name,
        lp.ADDRESS as ip,
        p.DRIVER as ocs_driver,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM listprinters lp
        LEFT JOIN printers p ON p.HARDWARE_ID=lp.HARDWARE_ID
        AND p.PORT=lp.ADDRESS
        WHERE lp.ADDRESS LIKE '%.%.%.%'
    </OCSPrinterCollector_with_listprinters_query>

	<OCSPrinterCollector_query>
        SELECT p.ID as primary_key,
        p.NAME as name,
        p.PORT as ip,
        p.DRIVER as ocs_driver,
        '$default_status$' as status,
        '$default_org_id$' as org_id
        FROM printers p
        WHERE p.port LIKE '%.%.%.%'
        AND p.port not like '%\_%'
    </OCSPrinterCollector_query>

	<!--*****************************************************************-->
	<!--************************ Software *******************************-->
	<!--*****************************************************************-->

	<!--*********************** Software ***************************-->
	<!-- select software in order to create version which doesn't exist in iTop-->
	<OCSSoftwareCollector_getListFromItop>
        SELECT Software
    </OCSSoftwareCollector_getListFromItop>

	<!-- Software -->
	<OCSSoftwareCollector_query>
        SELECT concat(s.name_id,'-',sv.ID) as primary_key,
        sn.NAME as name,
        sv.VERSION as version,
        sp.PUBLISHER as vendor,
        '$type_id$' as type
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        JOIN software_publisher sp ON sp.ID = s.PUBLISHER_ID
        WHERE sn .name IN ('$softwarelist$')
    </OCSSoftwareCollector_query>

    <!-- SoftwareLicence -->
    <OCSSoftwareLicenceCollector_query>
        SELECT distinct op.id as primary_key,
        op.GUID as name,
        concat(op.PRODUCT,' ',op.OFFICEVERSION) as software_id,
        op.OFFICEKEY as licence_key,
        '$default_org_id$' as org_id
        FROM officepack op
        JOIN software_name sn ON sn.ID= op.PRODUCTID
        WHERE sn.NAME in ('$softwarelist$')
    </OCSSoftwareLicenceCollector_query>

    <!-- Software - with  use_software_categories-->
	<OCSSoftwareCollector_with_categories_getListFromItop>
        SELECT OCSSoftwareCategory
        WHERE type !=''
  </OCSSoftwareCollector_with_categories_getListFromItop>

	<OCSSoftwareCollector_with_categories_query>
        SELECT concat(s.name_id,'-',sv.ID) as primary_key,
        sn.NAME as name,
        sv.VERSION as version,
        sp.PUBLISHER as vendor,
        '$type_id$' as type
        FROM ocs.software_categories sc
        JOIN ocs.software_categories_link sl ON sc.ID =sl.category_ID
        JOIN ocs.software_name sn ON sl.NAME_ID = sn.ID
        JOIN ocs.software_version sv ON sv.ID =sl.VERSION_ID
        JOIN ocs.software s ON s.NAME_ID = sn.ID AND s.VERSION_ID =sl.VERSION_ID
        JOIN ocs.hardware h ON h.ID= s.HARDWARE_ID
        JOIN ocs.software_publisher sp ON sp.ID = s.PUBLISHER_ID
        WHERE sc.CATEGORY_NAME in ('$softwarelist$')
    </OCSSoftwareCollector_with_categories_query>

	<!-- SoftwareLicence - with  use_software_categories-->
	<OCSSoftwareLicenceCollector_with_categories_query>
        SELECT distinct op.id as primary_key,
        op.GUID as name,
        concat(op.PRODUCT,' ',op.OFFICEVERSION) as software_id,
        op.OFFICEKEY as licence_key,
        '$default_org_id$' as org_id
        FROM officepack op
        JOIN software_name sn ON sn.ID= op.PRODUCTID
        JOIN software_categories sc ON sc.ID =s.CATEGORY_ID
        WHERE sc.CATEGORY_NAME in ('$softwarelist$')
    </OCSSoftwareLicenceCollector_with_categories_query>

	<!--********************** PCSoftware *************************-->
	<!-- PCSoftware adds a link between CI and software of type PCSoftware on an existing software already in iTop-->
	<OCSPCSoftwareCollector_getListFromItop>
        SELECT Software
        WHERE type='PCSoftware'
    </OCSPCSoftwareCollector_getListFromItop>

	<!-- PCSoftware -->
	<OCSPCSoftwareCollector_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        WHERE sn.NAME in ('$softwarelist$')
    </OCSPCSoftwareCollector_query>

    <!-- PCSoftware - with licence-->
    <OCSPCSoftwarecollector_with_licence_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        op.GUID as softwarelicence_id
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        LEFT JOIN ocs.officepack op ON h.ID= op.HARDWARE_ID
        AND op.PRODUCT=sn.NAME
        AND op.OFFICEVERSION=sv.VERSION
        WHERE sn.NAME in ('$softwarelist$')
    </OCSPCSoftwarecollector_with_licence_query>


    <!-- PCSoftware - with  use_software_categories -->
	<OCSPCSoftwareCollector_with_categories_getListFromItop>
        SELECT OCSSoftwareCategory
        WHERE type='PCSoftware'
    </OCSPCSoftwareCollector_with_categories_getListFromItop>

	<!-- PCSoftware - with  use_software_categories without licence-->
	<OCSPCSoftwareCollector_with_categories_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM ocs.software_categories sc
        JOIN ocs.software_categories_link sl ON sc.ID =sl.category_ID
        JOIN ocs.software_name sn ON sl.NAME_ID = sn.ID
        JOIN ocs.software_version sv ON sv.ID =sl.VERSION_ID
        JOIN ocs.software s ON s.NAME_ID = sn.ID
                  AND s.VERSION_ID =sl.VERSION_ID
        JOIN ocs.hardware h ON h.ID= s.HARDWARE_ID
        WHERE sc.CATEGORY_NAME in ('$softwarelist$')
    </OCSPCSoftwareCollector_with_categories_query>


	<!-- PCSoftware -  with  use_software_categories and licence-->
	<OCSPCSoftwarecollector_with_licence_with_categories_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        op.GUID as softwarelicence_id
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        LEFT JOIN ocs.officepack op ON h.ID= op.HARDWARE_ID
        AND op.PRODUCT=sn.NAME
        AND op.OFFICEVERSION=sv.VERSION
        WHERE sn.NAME in ('$softwarelist$')
    </OCSPCSoftwarecollector_with_licence_with_categories_query>


    <!--********************** WebServer *************************-->
    <!-- WebServer adds a link between CI and software of type WebServer on an existing software already in iTop-->
    <OCSWebServerCollector_getListFromItop>
        SELECT Software
        WHERE type='WebServer'
    </OCSWebServerCollector_getListFromItop>

    <OCSWebServerCollector_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        WHERE sn.NAME in ('$softwarelist$')
    </OCSWebServerCollector_query>

    <!-- WebServer - with  use_software_categories -->
    <OCSWebServerCollector_with_categories_getListFromItop>
        SELECT OCSSoftwareCategory
        WHERE type='WebServer'
    </OCSWebServerCollector_with_categories_getListFromItop>

    <OCSWebServerCollector_with_categories_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM ocs.software_categories sc
        JOIN ocs.software_categories_link sl ON sc.ID =sl.category_ID
        JOIN ocs.software_name sn ON sl.NAME_ID = sn.ID
        JOIN ocs.software_version sv ON sv.ID =sl.VERSION_ID
        JOIN ocs.software s ON s.NAME_ID = sn.ID
                  AND s.VERSION_ID =sl.VERSION_ID
        JOIN ocs.hardware h ON h.ID= s.HARDWARE_ID
        WHERE sc.CATEGORY_NAME in ('$softwarelist$')
    </OCSWebServerCollector_with_categories_query>


    <!--********************** OtherSoftware *************************-->
    <!-- OtherSoftware adds a link between CI and software of type OtherSoftware on an existing software already in iTop-->
    <OCSOtherSoftwareCollector_getListFromItop>
        SELECT Software
        WHERE type='OtherSoftware'
    </OCSOtherSoftwareCollector_getListFromItop>

    <OCSOtherSoftwareCollector_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        WHERE sn.NAME in ('$softwarelist$')
    </OCSOtherSoftwareCollector_query>

    <!-- OtherSoftware - with  use_software_categories -->
    <OCSOtherSoftwareCollector_with_categories_getListFromItop>
        SELECT OCSSoftwareCategory
        WHERE type='OtherSoftware'
    </OCSOtherSoftwareCollector_with_categories_getListFromItop>

    <OCSOtherSoftwareCollector_with_categories_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM ocs.software_categories sc
        JOIN ocs.software_categories_link sl ON sc.ID =sl.category_ID
        JOIN ocs.software_name sn ON sl.NAME_ID = sn.ID
        JOIN ocs.software_version sv ON sv.ID =sl.VERSION_ID
        JOIN ocs.software s ON s.NAME_ID = sn.ID
                  AND s.VERSION_ID =sl.VERSION_ID
        JOIN ocs.hardware h ON h.ID= s.HARDWARE_ID
        WHERE sc.CATEGORY_NAME in ('$softwarelist$')
    </OCSOtherSoftwareCollector_with_categories_query>

    <!--********************** Middleware *************************-->
    <!-- Middleware adds a link between CI and software of type Middleware on an existing software already in iTop-->
    <OCSMiddlewareCollector_getListFromItop>
        SELECT Software
        WHERE type='Middleware'
    </OCSMiddlewareCollector_getListFromItop>

    <OCSMiddlewareCollector_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        WHERE sn.NAME in ('$softwarelist$')
    </OCSMiddlewareCollector_query>

    <!-- Middleware - with  use_software_categories-->
    <OCSMiddlewareCollector_with_categories_getListFromItop>
        SELECT OCSSoftwareCategory
        WHERE type='Middleware'
    </OCSMiddlewareCollector_with_categories_getListFromItop>

    <OCSMiddlewareCollector_with_categories_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM ocs.software_categories sc
        JOIN ocs.software_categories_link sl ON sc.ID =sl.category_ID
        JOIN ocs.software_name sn ON sl.NAME_ID = sn.ID
        JOIN ocs.software_version sv ON sv.ID =sl.VERSION_ID
        JOIN ocs.software s ON s.NAME_ID = sn.ID
                  AND s.VERSION_ID =sl.VERSION_ID
        JOIN ocs.hardware h ON h.ID= s.HARDWARE_ID
        WHERE sc.CATEGORY_NAME in ('$softwarelist$')
    </OCSMiddlewareCollector_with_categories_query>

    <!--********************** DBServer *************************-->
    <!-- DBServer adds a link between CI and software of type DBServer on an existing software already in iTop-->
    <OCSDBServerCollector_getListFromItop>
        SELECT Software
        WHERE type='DBServer'
    </OCSDBServerCollector_getListFromItop>

    <OCSDBServerCollector_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM software_name sn
        JOIN software s ON s.NAME_ID = sn.ID
        JOIN hardware h ON h.ID= s.HARDWARE_ID
        JOIN software_version sv ON sv.ID =s.VERSION_ID
        WHERE sn.NAME in ('$softwarelist$')
    </OCSDBServerCollector_query>

    <!-- DBServer - with  use_software_categories-->
	<OCSDBServerCollector_with_categories_getListFromItop>
        SELECT OCSSoftwareCategory
        WHERE type='DBServer'
    </OCSDBServerCollector_with_categories_getListFromItop>

    <OCSDBServerCollector_with_categories_query>
        SELECT s.id as primary_key,
        sn.NAME as name,
        concat(sn.NAME,' ',sv.VERSION) as software_id,
        h.NAME as system_id,
        s.folder as path,
        s.COMMENTS as description,
        '$default_active_status$' as status,
        '$default_org_id$' as org_id,
        null as softwarelicence_id
        FROM ocs.software_categories sc
        JOIN ocs.software_categories_link sl ON sc.ID =sl.category_ID
        JOIN ocs.software_name sn ON sl.NAME_ID = sn.ID
        JOIN ocs.software_version sv ON sv.ID =sl.VERSION_ID
        JOIN ocs.software s ON s.NAME_ID = sn.ID
                  AND s.VERSION_ID =sl.VERSION_ID
        JOIN ocs.hardware h ON h.ID= s.HARDWARE_ID
        WHERE sc.CATEGORY_NAME in ('$softwarelist$')
    </OCSDBServerCollector_with_categories_query>

	<!-- Class collection sequence -->
	<collectors_launch_sequence type="array">
        <!-- Warning: order is important for some classes-->
		<collector>
            <!-- Brand -->
			<name>OCSBrandCollector</name>
            <enable>yes</enable>
            <rank>1</rank>
        </collector>
        <collector>
            <!-- OS Family -->
	        <name>OCSOSFamilyCollector</name>
            <enable>yes</enable>
            <rank>2</rank>
        </collector>
        <collector>
            <!-- OS Version  -->
	        <name>OCSOSVersionCollector</name>
            <enable>yes</enable>
            <rank>3</rank>
        </collector>
        <collector>
            <!-- IP v4 Address -->
	        <name>OCSIPv4AddressCollector</name>
            <enable>yes</enable>
            <rank>10</rank>
        </collector>
        <collector>
            <!-- IP v6 Address -->
	        <name>OCSIPv6AddressCollector</name>
            <enable>yes</enable>
            <rank>11</rank>
        </collector>
        <collector>
            <!-- PC Model -->
	        <name>OCSPCModelCollector</name>
            <enable>yes</enable>
            <rank>20</rank>
        </collector>
        <collector>
            <!-- OS Licence -->
	        <name>OCSOSLicenceCollector</name>
            <enable>yes</enable>
            <rank>21</rank>
        </collector>
        <collector>
            <!-- PC -->
	        <name>OCSPCCollector</name>
            <enable>yes</enable>
            <rank>22</rank>
        </collector>
        <collector>
            <!--PC Physical Interface -->
	        <name>OCSPCPhysicalInterfaceCollector</name>
            <enable>yes</enable>
            <rank>23</rank>
        </collector>
        <collector>
            <!-- Server Model -->
	        <name>OCSServerModelCollector</name>
            <enable>yes</enable>
            <rank>30</rank>
        </collector>
        <collector>
            <!--  Server  -->
	        <name>OCSServerCollector</name>
            <enable>yes</enable>
            <rank>31</rank>
        </collector>
        <collector>
            <!-- Server Physical Interface -->
	        <name>OCSServerPhysicalInterfaceCollector</name>
            <enable>yes</enable>
            <rank>32</rank>
        </collector>
        <collector>
            <!--Virtual Machine -->
	        <name>OCSVirtualMachineCollector</name>
            <enable>yes</enable>
            <rank>40</rank>
        </collector>
        <collector>
            <!--Logical Interface-->
	        <name>OCSLogicalInterfaceCollector</name>
            <enable>yes</enable>
            <rank>41</rank>
        </collector>
        <collector>
            <!-- lnk IP Interface To IP Address -->
	        <name>OCSlnkIPInterfaceToIPAddressCollector</name>
            <enable>yes</enable>
            <rank>50</rank>
        </collector>
        <collector>
            <!-- Mobile Phone -->
	        <name>OCSMobilePhoneCollector</name>
            <enable>yes</enable>
            <rank>51</rank>
        </collector>
        <collector>
            <!-- Printer -->
	        <name>OCSPrinterCollector</name>
            <enable>yes</enable>
            <rank>52</rank>
        </collector>
        <collector>
            <!-- Software -->
	        <name>OCSSoftwareCollector</name>
            <enable>yes</enable>
            <rank>60</rank>
        </collector>
        <collector>
            <!-- SoftwareLicence -->
	        <name>OCSSoftwareLicenceCollector</name>
            <enable>yes</enable>
            <rank>61</rank>
        </collector>
        <collector>
            <!-- Software Instance : PC Software -->
	        <name>OCSPCSoftwareCollector</name>
            <enable>yes</enable>
            <rank>62</rank>
        </collector>
        <collector>
            <!-- Software Instance : DB Server-->
            <name>OCSDBServerCollector</name>
            <enable>yes</enable>
            <rank>63</rank>
        </collector>
        <collector>
            <!-- Software Instance : Middleware-->
            <name>OCSMiddlewareCollector</name>
            <enable>yes</enable>
            <rank>64</rank>
        </collector>
        <collector>
            <!-- Software Instance : Other Software-->
            <name>OCSOtherSoftwareCollector</name>
            <enable>yes</enable>
            <rank>65</rank>
        </collector>
        <collector>
            <!-- Software Instance : Web server-->
            <name>OCSWebServerCollector</name>
            <enable>yes</enable>
            <rank>66</rank>
        </collector>
        <collector>
            <!-- Asset Category-->
            <name>OCSAssetCategoryCollector</name>
            <enable>yes</enable>
            <rank>80</rank>
        </collector>
        <collector>
            <!-- Software Category-->
            <name>OCSSoftwareCategoryCollector</name>
            <enable>yes</enable>
            <rank>81</rank>
        </collector>
    </collectors_launch_sequence>
</parameters>
